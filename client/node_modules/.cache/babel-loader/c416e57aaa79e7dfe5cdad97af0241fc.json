{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akhtar\\\\Documents\\\\Study Material\\\\Social_Network\\\\client\\\\src\\\\components\\\\dashboard\\\\Dashboard.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Spinner from '../layout/Spinner';\nimport DashboardActions from './DashboardActions';\nimport Experience from './Experience';\nimport Education from './Education';\nimport { getCurrentProfile, deleteAcount } from '../../actions/profile';\n\nconst Dashboard = ({\n  getCurrentProfile,\n  deleteAcount,\n  auth: {\n    user\n  },\n  profile: {\n    profile,\n    loading\n  }\n}) => {\n  useEffect(() => {\n    getCurrentProfile();\n  }, []);\n  return loading && profile === null ? React.createElement(Spinner, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    className: \"large text-primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Dashboard\"), React.createElement(\"p\", {\n    className: \"lead\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), \"Welcome \", user && user.name), profile !== null ? React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(DashboardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }), React.createElement(Experience, {\n    experience: profile.experience,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }), React.createElement(Education, {\n    education: profile.education,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"my-2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn btn-danger\",\n    onClick: () => deleteAcount(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"i\", {\n    className: \"fas fa-user-minus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }), \" Delete My Account\"))) : React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"You have not yet set up a Profile, Please add some info\"), React.createElement(Link, {\n    to: \"/create-profile\",\n    className: \"btn btn-primary my-1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"Create Profile\")));\n};\n\nDashboard.propTypes = {\n  getCurrentProfile: PropTypes.func.isRequired,\n  deleteAcount: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  profile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  profile: state.profile\n});\n\nexport default connect(mapStateToProps, {\n  getCurrentProfile,\n  deleteAcount\n})(Dashboard);","map":{"version":3,"sources":["C:/Users/Akhtar/Documents/Study Material/Social_Network/client/src/components/dashboard/Dashboard.js"],"names":["React","Fragment","useEffect","Link","PropTypes","connect","Spinner","DashboardActions","Experience","Education","getCurrentProfile","deleteAcount","Dashboard","auth","user","profile","loading","name","experience","education","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport Spinner from '../layout/Spinner';\r\nimport DashboardActions from './DashboardActions';\r\nimport Experience from './Experience';\r\nimport Education from './Education';\r\nimport { getCurrentProfile, deleteAcount } from '../../actions/profile';\r\n\r\nconst Dashboard = ({ getCurrentProfile, deleteAcount, auth: { user }, profile: { profile, loading } }) =>{\r\n  useEffect(()=> {\r\n    getCurrentProfile();\r\n  }, []);\r\n  return loading && profile === null ? <Spinner /> : <Fragment>\r\n   <h1 className=\"large text-primary\">Dashboard</h1>\r\n   <p className=\"lead\"><i className=\"fas fa-user\"></i>Welcome { user && user.name }</p>\r\n   {profile !== null ? (<Fragment>\r\n     <DashboardActions />\r\n     <Experience experience={profile.experience} />\r\n     <Education education={profile.education} />\r\n\r\n     <div className=\"my-2\">\r\n      <button className=\"btn btn-danger\" onClick={()=> deleteAcount()}>\r\n       <i className=\"fas fa-user-minus\"></i> Delete My Account\r\n      </button>\r\n     </div>\r\n     </Fragment>\r\n   ) : (\r\n       <Fragment>\r\n     <p>You have not yet set up a Profile, Please add some info</p>\r\n     <Link to='/create-profile' className=\"btn btn-primary my-1\">Create Profile</Link>\r\n     </Fragment>)}\r\n  </Fragment>\r\n};\r\n\r\nDashboard.propTypes = {\r\n  getCurrentProfile: PropTypes.func.isRequired,\r\n  deleteAcount: PropTypes.func.isRequired,\r\n  auth: PropTypes.object.isRequired,\r\n  profile: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps =state =>({\r\n  auth: state.auth,\r\n  profile: state.profile\r\n});\r\n\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, { getCurrentProfile, deleteAcount })(Dashboard);\r\n"]},"metadata":{},"sourceType":"module"}